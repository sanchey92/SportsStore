@page "/admin/orders"
@inherits OwningComponentBase<IOrderRepository>

<OrderTable TableTittle="Unshipped Orders"
            Orders="UnshippedOrders"
            ButtonLabel="Ship"
            OrderSelected="ShipOrder"/>
<OrderTable TableTittle="Shipped Orders"
            Orders="ShippedOrders"
            ButtonLabel="Reset"
            OrderSelected="ResetOrder"/>
<button class="btn btn-info"
        @onclick="@(e => UpdateData())">
    Refresh Data
</button>

@code {
    public IOrderRepository Repository => Service;

    public IEnumerable<Order> AllOrders { get; set; }
    public IEnumerable<Order> UnshippedOrders { get; set; }
    public IEnumerable<Order> ShippedOrders { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllOrders = await Repository.Orders.ToListAsync();
        UnshippedOrders = AllOrders.Where(order => !order.Shipped);
        ShippedOrders = AllOrders.Where(order => order.Shipped);
    }

    public void ShipOrder(int id) => UpdateOrder(id, true);
    public void ResetOrder(int id) => UpdateOrder(id, false);

    private void UpdateOrder(int id, bool shipValue)
    {
        var order = Repository.Orders.FirstOrDefault(o => o.OrderId == id);
        if (order == null) return;
        order.Shipped = shipValue;
        Repository.SaveOrder(order);
    }

}